# user settings

# the third answer on this page explains how this works:
# https://unix.stackexchange.com/questions/4650
env_file=$(echo "${BASH_SOURCE[${#BASH_SOURCE[@]} - 1]}")
echo the env file is "${env_file}"

# need the dir above the env file location without coding it
# into this file, which will be in source control.
# the users environment will know where the files is to
# source it and cause the the env_file setting above work.
tldev_home=$(cd $(dirname $env_file)/..; pwd)

tldev_test_user_home=${tldev_home}/testuser

# code running from the dev source tree use the same 
# use the same JOURNAL_PATH as tests running from code 
# deployed to the testuser/bin dir. 
JOURNAL_PATH="${tldev_test_user_home}/tltestjournal"
export JOURNAL_PATH

TLOG_TMP="${tldev_test_user_home}/tmp/tlog"
export TLOG_TMP

echo will source: "${tldev_home}/pyvenvs/pyvenv_3.9.5/bin/activate"
. "${tldev_home}/pyvenvs/pyvenv_3.9.5/bin/activate"
#cd ${tldev_home}  && . pyenvs/pyvenv_3.9.5/bin/activate

# test this to see if it gets the tlog module.
PYTHONPATH=${tldev_home}/tlog/tlog:$PYTHONPATH
export PYTHONPATH

PATH=${tldev_home}/tldbin:$PATH

alias cdtldev="cd ${tldev_home}"

# create separate environmet for testing scripts deployed under testuser/bin
# PYTHONPATH=${tldev_home}/tlog/tlog:$PYTHONPATH
# PATH=${tldev_test_user_home}:$PATH # mv this to the tluser test scripts.
#export PATH
# in this context, these aliases:
#   - run the testuser deployed tlog based on PYTHON_PATH as set above 
#   - use the testuser journal and endeavors based on JOURNAL_PATH as set above   
# otherwise they are he same as the aliases in tlog/tlog/tlogenv.sample
# alias tlog='python -m tlog' 
# alias cdjournal='cd \$\(journaldir.py \)'
# alias cdj='cd $(journaldir.py);pwd'


echo PYTHONPATH is: $PYTHONPATH
echo PATH is: $PATH
